# Chessboard Diagram Assignment Report

[Replace the square-bracketed text with your own text. *Leave everything else unchanged.* 
Note, the reports are parsed to check word limits, etc. Changing the format may cause 
the parsing to fail.]

## Feature Extraction (Max 200 Words)

For feature extraction, I have used PCA. I tested multiple methods, and found that PCA worked best. Some other methods I tested include Gaussian random projection, the DCT (through the scipy implementation). I decided not to use LDA, as there are far too many features (>2000), and far too many classes for it to be feasible.

## Square Classifier (Max 200 Words)

For the square classifier, a basic KNN approach was used. I used k=5 and the Euclidian distance measure, although I implemented and tested many other distance measures. I found that k=5 worked best

## Full-board Classification (Max 200 Words)

For the full-board classifier, I also used KNN, but with a non-standard distance measure, which I called "EuclidWithPriors". I calculated p(chess piece | location on board) using Bayes' rule, and then used this as the prior for the class. The distance measure is defined as as (Euclidian distance / (prior + 1)). I did test a Gaussian Bayes classifier, but this didn't work as well as KNN.

## Performance

My percentage correctness scores (to 1 decimal place) for the development data are as follows.

High quality data:

- Percentage Squares Correct: 98.2%
- Percentage Boards Correct: 98.5%

Noisy data:

- Percentage Squares Correct: 94.5%
- Percentage Boards Correct: 95.3%

## Other information (Optional, Max 100 words)

[Optional: highlight any significant aspects of your system that are NOT covered in the
sections above]
